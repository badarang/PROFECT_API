openapi: 3.0.0
info:
  title: Profect API
  version: 1.0.0
  description: |
    음식 주문 관리 플랫폼 API 명세서
servers:
  - url: http://localhost:8080
tags:
  - name: 사용자
  - name: 주소
  - name: 카테고리
  - name: 가게
  - name: 메뉴
  - name: 주문
  - name: 결제
  - name: 주문항목
  - name: 리뷰
  - name: AI응답
paths:
  /users/signup:
    post:
      tags: [사용자]
      summary: 회원가입
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserSignup'
      responses:
        '201':
          description: Created
  /users/login:
    post:
      tags: [사용자]
      summary: 로그인
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserLogin'
      responses:
        '200':
          description: 로그인 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    description: JWT 토큰
        '401':
          description: 로그인 실패 (잘못된 정보)
  /users/{username}:
    get:
      tags: [사용자]
      summary: 사용자 정보 조회
      parameters:
        - name: username
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 사용자 정보
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserInfo'
  /users/{username}/addresses:
    post:
      tags: [주소]
      summary: 주소 등록
      parameters:
        - name: username
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddressCreate'
      responses:
        '200':
          description: 주소 등록 결과
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Address'
    get:
      tags: [주소]
      summary: 주소 목록 조회
      parameters:
        - name: username
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 주소 목록
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Address'
  /categories:
    get:
      tags: [카테고리]
      summary: 카테고리 목록 조회
      responses:
        '200':
          description: 카테고리 목록
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Category'
  /stores:
    post:
      tags: [가게]
      summary: 가게 등록
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StoreCreate'
      responses:
        '201':
          description: 가게 등록 결과
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Store'
    get:
      tags: [가게]
      summary: 가게 목록 조회
      responses:
        '200':
          description: 가게 목록
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Store'
  /stores/{store_id}:
    get:
      tags: [가게]
      summary: 가게 상세 조회
      parameters:
        - name: store_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 가게 상세
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Store'
    put:
      tags: [가게]
      summary: 가게 수정
      parameters:
        - name: store_id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StoreUpdate'
      responses:
        '200':
          description: 가게 수정 결과
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Store'
    delete:
      tags: [가게]
      summary: 가게 삭제
      parameters:
        - name: store_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: 삭제 성공
  /menus:
    post:
      tags: [메뉴]
      summary: 메뉴 등록
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MenuCreate'
      responses:
        '201':
          description: 메뉴 등록 결과
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Menu'
  /stores/{store_id}/menus:
    get:
      tags: [메뉴]
      summary: 메뉴 목록 조회
      parameters:
        - name: store_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 메뉴 목록
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Menu'
  /menus/{menu_id}:
    get:
      tags: [메뉴]
      summary: 메뉴 상세 조회
      parameters:
        - name: menu_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 메뉴 상세
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Menu'
    put:
      tags: [메뉴]
      summary: 메뉴 수정
      parameters:
        - name: menu_id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MenuUpdate'
      responses:
        '200':
          description: 메뉴 수정 결과
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Menu'
    delete:
      tags: [메뉴]
      summary: 메뉴 삭제
      parameters:
        - name: menu_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: 삭제 성공
  /orders:
    post:
      tags: [주문]
      summary: 주문 생성
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderCreate'
      responses:
        '201':
          description: 주문 생성 결과
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
  /orders/{order_id}:
    get:
      tags: [주문]
      summary: 주문 상세 조회
      parameters:
        - name: order_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 주문 상세
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
  /orders/{order_id}/status:
    get:
      tags: [주문]
      summary: 주문 상태 조회
      parameters:
        - name: order_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 주문 상태
          content:
            application/json:
              schema:
                type: object
                properties:
                  order_id:
                    type: string
                  order_status:
                    type: string
  /orders/{order_id}/approve:
    post:
      tags: [주문]
      summary: 주문 승인
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                approved_by:
                  type: string
                estimated_preparation_time:
                  type: integer
      parameters:
        - name: order_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 주문 승인 결과
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
  /orders/{order_id}/cancel:
    post:
      tags: [주문]
      summary: 주문 취소
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                cancel_reason:
                  type: string
                canceled_by:
                  type: string
      parameters:
        - name: order_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 주문 취소 결과
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
  /payments/request:
    post:
      tags: [결제]
      summary: 결제 요청
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentRequest'
      responses:
        '201':
          description: 결제 요청 결과
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payment'
  /payments/approve:
    post:
      tags: [결제]
      summary: 결제 승인
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentApprove'
      responses:
        '200':
          description: 결제 승인 결과
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payment'
  /payments/{payment_id}/cancel:
    post:
      tags: [결제]
      summary: 결제 취소
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                cancel_reason:
                  type: string
                canceled_by:
                  type: string
      parameters:
        - name: payment_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 결제 취소 결과
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payment'
  /payments/{payment_id}:
    get:
      tags: [결제]
      summary: 결제 상세 조회
      parameters:
        - name: payment_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 결제 상세
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payment'
  /orders/{order_id}/items:
    get:
      tags: [주문항목]
      summary: 주문별 항목 조회
      parameters:
        - name: order_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 주문 항목 목록
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrderItem'
  /reviews:
    post:
      tags: [리뷰]
      summary: 리뷰 등록
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReviewCreate'
      responses:
        '201':
          description: 리뷰 등록 결과
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Review'
  /stores/{store_id}/reviews:
    get:
      tags: [리뷰]
      summary: 리뷰 목록 조회
      parameters:
        - name: store_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 리뷰 목록
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Review'
  /ai-responses:
    post:
      tags: [AI응답]
      summary: 메뉴 AI 설명 등록
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AIResponseCreate'
      responses:
        '201':
          description: AI 응답 등록 결과
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AIResponse'
  /menus/{menu_id}/ai-response:
    get:
      tags: [AI응답]
      summary: 메뉴 AI 설명 조회
      parameters:
        - name: menu_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: AI 응답
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AIResponse'
components:
  schemas:
    UserSignup:
      type: object
      properties:
        username:
          type: string
        nickname:
          type: string
        email:
          type: string
        password:
          type: string
    UserLogin:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
    UserInfo:
      type: object
      properties:
        username:
          type: string
        nickname:
          type: string
        email:
          type: string
        role:
          type: string
          enum: [CUSTOMER, OWNER, MANAGER, MASTER]
    AddressCreate:
      type: object
      properties:
        zipcode:
          type: string
        road_addr:
          type: string
        detail_addr:
          type: string
    Address:
      type: object
      properties:
        id:
          type: string
        zipcode:
          type: string
        road_addr:
          type: string
        detail_addr:
          type: string
        is_selected:
          type: boolean
    Category:
      type: object
      properties:
        category_id:
          type: string
        category_name:
          type: string
    StoreCreate:
      type: object
      properties:
        store_name:
          type: string
        store_address:
          type: string
        category_id:
          type: string
    StoreUpdate:
      type: object
      properties:
        store_name:
          type: string
        store_address:
          type: string
        category_id:
          type: string
    Store:
      type: object
      properties:
        store_id:
          type: string
        store_name:
          type: string
        store_address:
          type: string
        category_id:
          type: string
        store_lat:
          type: number
        store_lon:
          type: number
    MenuCreate:
      type: object
      properties:
        store_id:
          type: string
        menu_name:
          type: string
        price:
          type: number
        description:
          type: string
    MenuUpdate:
      type: object
      properties:
        menu_name:
          type: string
        price:
          type: number
        description:
          type: string
    Menu:
      type: object
      properties:
        menu_id:
          type: string
        store_id:
          type: string
        menu_name:
          type: string
        price:
          type: number
        description:
          type: string
    OrderCreate:
      type: object
      properties:
        user_id:
          type: string
        store_id:
          type: string
        order_type:
          type: string
          enum: [ONLINE, OFFLINE]
        menu_items:
          type: array
          items:
            $ref: '#/components/schemas/OrderItemCreate'
        delivery:
          type: object
          properties:
            zipcode:
              type: string
            road_addr:
              type: string
            detail_addr:
              type: string
            delivery_requests:
              type: string
    Order:
      type: object
      properties:
        order_id:
          type: string
        order_number:
          type: string
        user_id:
          type: string
        store_id:
          type: string
        order_status:
          type: string
        order_type:
          type: string
        total_amount:
          type: number
    OrderItemCreate:
      type: object
      properties:
        menu_id:
          type: string
        quantity:
          type: integer
        options:
          type: object
        special_requests:
          type: string
    OrderItem:
      type: object
      properties:
        order_item_id:
          type: string
        order_id:
          type: string
        menu_id:
          type: string
        quantity:
          type: integer
        unit_price:
          type: number
        options:
          type: object
        special_requests:
          type: string
    PaymentRequest:
      type: object
      properties:
        order_id:
          type: string
        payment_method:
          type: string
        card_info:
          type: object
    PaymentApprove:
      type: object
      properties:
        payment_id:
          type: string
        pg_transaction_id:
          type: string
        approval_code:
          type: string
        approved_amount:
          type: number
    Payment:
      type: object
      properties:
        payment_id:
          type: string
        order_id:
          type: string
        payment_status:
          type: string
        payment_method:
          type: string
        amount:
          type: number
        pg_transaction_id:
          type: string
        approval_code:
          type: string
        card_info:
          type: object
        redirect_url:
          type: string
        receipt_url:
          type: string
        requested_at:
          type: string
        approved_at:
          type: string
        failed_at:
          type: string
        failure_reason:
          type: string
        offline_payment_note:
          type: string
    ReviewCreate:
      type: object
      properties:
        order_id:
          type: string
        store_id:
          type: string
        user_id:
          type: string
        rating:
          type: integer
        content:
          type: string
    Review:
      type: object
      properties:
        review_id:
          type: string
        order_id:
          type: string
        store_id:
          type: string
        user_id:
          type: string
        rating:
          type: integer
        content:
          type: string
    AIResponseCreate:
      type: object
      properties:
        menu_id:
          type: string
        menu_name:
          type: string
        description:
          type: string
    AIResponse:
      type: object
      properties:
        ai_response_id:
          type: string
        menu_id:
          type: string
        menu_name:
          type: string
        description:
          type: string 